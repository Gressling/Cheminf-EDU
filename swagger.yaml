openapi: 3.0.0
info:
  title: ChemINF-EDU API
  version: 1.0.0
servers:
  - url: http://localhost:8050
paths:
  /api/molecules:
    get:
      summary: Get all molecules
      responses:
        '200':
          description: List of molecules.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Molecule'
        '500':
          description: Internal server error.
    post:
      summary: Create a new molecule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMolecule'
      responses:
        '201':
          description: Molecule created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
  /api/molecules/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    put:
      summary: Update a molecule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMolecule'
      responses:
        '200':
          description: Molecule updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
    delete:
      summary: Delete a molecule
      responses:
        '200':
          description: Molecule deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error.
  /api/inventory:
    get:
      summary: Get all inventory entries
      responses:
        '200':
          description: List of inventory entries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '500':
          description: Internal server error.
    post:
      summary: Create a new inventory entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewInventory'
      responses:
        '201':
          description: Inventory entry created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
  /api/inventory/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    put:
      summary: Update an inventory entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInventory'
      responses:
        '200':
          description: Inventory entry updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
    delete:
      summary: Delete an inventory entry
      responses:
        '200':
          description: Inventory entry deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error.
  /api/inventory/search:
    get:
      summary: Search inventory entries by molecule name
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Substring to search in MoleculeUpacName.
      responses:
        '200':
          description: Search results.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '500':
          description: Internal server error.
  /api/projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: List of projects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '500':
          description: Internal server error.
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '201':
          description: Project created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
  /api/projects/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    put:
      summary: Update a project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '200':
          description: Project updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
    delete:
      summary: Delete a project and its associated tasks
      responses:
        '200':
          description: Project and associated tasks deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error.
  /api/projects/{project_id}/tasks:
    get:
      summary: Get all tasks for a project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of tasks for the given project.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          description: Internal server error.
    post:
      summary: Create a new task for a project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '201':
          description: Task created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
  /api/tasks/{id}:
    put:
      summary: Update a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '200':
          description: Task updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
    delete:
      summary: Delete a task
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error.
  /api/reactions:
    get:
      summary: Get all reactions
      responses:
        '200':
          description: List of reactions (array of Reaction objects).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reaction'
        '500':
          description: Internal server error.
    post:
      summary: Create a new reaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReaction'
      responses:
        '201':
          description: Reaction created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
  /api/reactions/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    put:
      summary: Update a reaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReaction'
      responses:
        '200':
          description: Reaction updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
    delete:
      summary: Delete a reaction
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Reaction deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error.
  /api/reactions/{reaction_id}/participants:
    get:
      summary: Get all reaction participants for a reaction
      parameters:
        - in: path
          name: reaction_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of reaction participants (array of ReactionParticipant objects).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReactionParticipant'
        '500':
          description: Internal server error.
    post:
      summary: Create a new reaction participant
      parameters:
        - in: path
          name: reaction_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReactionParticipant'
      responses:
        '201':
          description: Reaction participant created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
  /api/participants/{reaction_id}/{molecule_id}/{role}:
    put:
      summary: Update a reaction participant's stoichiometric coefficient
      parameters:
        - in: path
          name: reaction_id
          required: true
          schema:
            type: integer
        - in: path
          name: molecule_id
          required: true
          schema:
            type: integer
        - in: path
          name: role
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stoichiometric_coefficient:
                  type: number
                  format: decimal
              required:
                - stoichiometric_coefficient
      responses:
        '200':
          description: Reaction participant updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request payload.
        '500':
          description: Internal server error.
    delete:
      summary: Delete a reaction participant
      parameters:
        - in: path
          name: reaction_id
          required: true
          schema:
            type: integer
        - in: path
          name: molecule_id
          required: true
          schema:
            type: integer
        - in: path
          name: role
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reaction participant deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error.
components:
  schemas:
    Molecule:
      type: object
      properties:
        id:
          type: integer
        MoleculeUpacName:
          type: string
        SMILES:
          type: string
    NewMolecule:
      type: object
      properties:
        MoleculeUpacName:
          type: string
      required:
        - MoleculeUpacName
    Inventory:
      type: object
      properties:
        id:
          type: integer
        MoleculeUpacName:
          type: string
        amount:
          type: integer
        unit:
          type: string
    NewInventory:
      type: object
      properties:
        MoleculeUpacName:
          type: string
        amount:
          type: integer
      required:
        - MoleculeUpacName
        - amount
    UpdateInventory:
      type: object
      properties:
        amount:
          type: integer
      required:
        - amount
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    NewProject:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    Task:
      type: object
      properties:
        id:
          type: integer
        project_id:
          type: integer
        description:
          type: string
        content:
          type: string
    NewTask:
      type: object
      properties:
        description:
          type: string
        content:
          type: string
      required:
        - description
    Reaction:
      type: object
      properties:
        ReactionID:
          type: integer
        ReactionName:
          type: string
        ReactionDescription:
          type: string
    NewReaction:
      type: object
      properties:
        ReactionName:
          type: string
        ReactionDescription:
          type: string
      required:
        - ReactionName
    ReactionParticipant:
      type: object
      properties:
        ReactionID:
          type: integer
        MoleculeID:
          type: integer
        Role:
          type: string
        StoichiometricCoefficient:
          type: number
          format: decimal
    NewReactionParticipant:
      type: object
      properties:
        molecule_id:
          type: integer
        role:
          type: string
        stoichiometric_coefficient:
          type: number
          format: decimal
      required:
        - molecule_id
        - role
        - stoichiometric_coefficient
    Message:
      type: object
      properties:
        message:
          type: string